{"ast":null,"code":"// components\nimport UsersListItem from\"./UsersListItem\";import UsersGridItem from\"./UsersGridItem\";import Loading from\"../common/Loading/Loading\";// types\n// css import\nimport classes from\"./ResultTable.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UsersList=function UsersList(props){var usersList;var listGridItem;// render usersList based on view preference prop ( list or grid )\nswitch(props.viewPreference){case\"grid\":usersList=props.users.map(function(user){return/*#__PURE__*/_jsx(UsersGridItem,{user:user},user.id);});listGridItem=/*#__PURE__*/_jsxs(\"div\",{className:classes[\"list_container\"],children:[/*#__PURE__*/_jsx(\"div\",{className:classes[\"grid-header\"],children:\"Profiles\"}),/*#__PURE__*/_jsx(\"div\",{className:classes[\"grid-body-wrapper\"],children:usersList})]});break;case\"list\":usersList=props.users.map(function(user){return/*#__PURE__*/_jsx(UsersListItem,{user:user},user.id);});listGridItem=/*#__PURE__*/_jsxs(\"table\",{className:classes[\"list_container\"],cellPadding:\"5\",cellSpacing:\"0\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{colSpan:1,className:\"\".concat(classes[\"list_header_text\"],\" \").concat(classes[\"profile\"]),children:\"Login\"}),/*#__PURE__*/_jsx(\"th\",{colSpan:1,className:classes[\"list_header_text\"],children:\"Type\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:classes[\"t-body-page\"],children:usersList})]});break;default:break;}return/*#__PURE__*/_jsx(\"section\",{className:classes[\"table-section-wrapper\"],children:props.isLoading?/*#__PURE__*/_jsx(Loading,{}):props.errorMessage===\"\"?/*#__PURE__*/_jsx(\"div\",{className:classes[\"table-container\"],children:!props.isEmptyList?listGridItem:/*#__PURE__*/_jsx(\"div\",{className:classes[\"empty-list\"],children:/*#__PURE__*/_jsx(\"div\",{className:classes[\"empty-list-header\"],children:\"No Accounts retrieved\"})})}):/*#__PURE__*/_jsx(\"div\",{className:classes[\"empty-list\"],children:/*#__PURE__*/_jsx(\"div\",{className:classes[\"empty-list-header-error\"],children:props.errorMessage})})});};export default UsersList;","map":{"version":3,"sources":["/Users/kevinogidigbo/searchgit/src/components/ResultTable/UsersList.tsx"],"names":["UsersListItem","UsersGridItem","Loading","classes","UsersList","props","usersList","listGridItem","viewPreference","users","map","user","id","isLoading","errorMessage","isEmptyList"],"mappings":"AAAA;AACA,MAAOA,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA;AAGA;AACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,C,wFAWA,GAAMC,CAAAA,SAA0B,CAAG,QAA7BA,CAAAA,SAA6B,CAACC,KAAD,CAAW,CAC5C,GAAIC,CAAAA,SAAJ,CACA,GAAIC,CAAAA,YAAJ,CAEA;AACA,OAAQF,KAAK,CAACG,cAAd,EACE,IAAK,MAAL,CACEF,SAAS,CAAGD,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,SAACC,IAAD,qBAC1B,KAAC,aAAD,EAA6B,IAAI,CAAEA,IAAnC,EAAoBA,IAAI,CAACC,EAAzB,CAD0B,EAAhB,CAAZ,CAGAL,YAAY,cACV,aAAK,SAAS,CAAEJ,OAAO,CAAC,gBAAD,CAAvB,wBACE,YAAK,SAAS,CAAEA,OAAO,CAAC,aAAD,CAAvB,sBADF,cAEE,YAAK,SAAS,CAAEA,OAAO,CAAC,mBAAD,CAAvB,UAA+CG,SAA/C,EAFF,GADF,CAMA,MACF,IAAK,MAAL,CACEA,SAAS,CAAGD,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,SAACC,IAAD,qBAC1B,KAAC,aAAD,EAA6B,IAAI,CAAEA,IAAnC,EAAoBA,IAAI,CAACC,EAAzB,CAD0B,EAAhB,CAAZ,CAGAL,YAAY,cACV,eACE,SAAS,CAAEJ,OAAO,CAAC,gBAAD,CADpB,CAEE,WAAW,CAAC,GAFd,CAGE,WAAW,CAAC,GAHd,wBAKE,oCACE,mCACE,WACE,OAAO,CAAE,CADX,CAEE,SAAS,WAAKA,OAAO,CAAC,kBAAD,CAAZ,aAAoCA,OAAO,CAAC,SAAD,CAA3C,CAFX,mBADF,cAOE,WAAI,OAAO,CAAE,CAAb,CAAgB,SAAS,CAAEA,OAAO,CAAC,kBAAD,CAAlC,kBAPF,GADF,EALF,cAkBE,cAAO,SAAS,CAAEA,OAAO,CAAC,aAAD,CAAzB,UAA2CG,SAA3C,EAlBF,GADF,CAsBA,MACF,QACE,MAxCJ,CA0CA,mBACE,gBAAS,SAAS,CAAEH,OAAO,CAAC,uBAAD,CAA3B,UACGE,KAAK,CAACQ,SAAN,cACC,KAAC,OAAD,IADD,CAEGR,KAAK,CAACS,YAAN,GAAuB,EAAvB,cACF,YAAK,SAAS,CAAEX,OAAO,CAAC,iBAAD,CAAvB,UACG,CAACE,KAAK,CAACU,WAAP,CACCR,YADD,cAGC,YAAK,SAAS,CAAEJ,OAAO,CAAC,YAAD,CAAvB,uBACE,YAAK,SAAS,CAAEA,OAAO,CAAC,mBAAD,CAAvB,mCADF,EAJJ,EADE,cAaF,YAAK,SAAS,CAAEA,OAAO,CAAC,YAAD,CAAvB,uBACE,YAAK,SAAS,CAAEA,OAAO,CAAC,yBAAD,CAAvB,UACGE,KAAK,CAACS,YADT,EADF,EAhBJ,EADF,CAyBD,CAxED,CA0EA,cAAeV,CAAAA,SAAf","sourcesContent":["// components\nimport UsersListItem from \"./UsersListItem\";\nimport UsersGridItem from \"./UsersGridItem\";\nimport Loading from \"../common/Loading/Loading\";\n\n// types\nimport { User } from \"../../App\";\n\n// css import\nimport classes from \"./ResultTable.module.css\";\n\ntype Props = {\n  viewPreference: string;\n  users: User[];\n  isEmptyList: boolean;\n  isLoading: boolean;\n  filterParam: string;\n  errorMessage: string;\n};\n\nconst UsersList: React.FC<Props> = (props) => {\n  let usersList;\n  let listGridItem;\n\n  // render usersList based on view preference prop ( list or grid )\n  switch (props.viewPreference) {\n    case \"grid\":\n      usersList = props.users.map((user) => (\n        <UsersGridItem key={user.id} user={user} />\n      ));\n      listGridItem = (\n        <div className={classes[\"list_container\"]}>\n          <div className={classes[\"grid-header\"]}>Profiles</div>\n          <div className={classes[\"grid-body-wrapper\"]}>{usersList}</div>\n        </div>\n      );\n      break;\n    case \"list\":\n      usersList = props.users.map((user) => (\n        <UsersListItem key={user.id} user={user} />\n      ));\n      listGridItem = (\n        <table\n          className={classes[\"list_container\"]}\n          cellPadding=\"5\"\n          cellSpacing=\"0\"\n        >\n          <thead>\n            <tr>\n              <th\n                colSpan={1}\n                className={`${classes[\"list_header_text\"]} ${classes[\"profile\"]}`}\n              >\n                Login\n              </th>\n              <th colSpan={1} className={classes[\"list_header_text\"]}>\n                Type\n              </th>\n            </tr>\n          </thead>\n          <tbody className={classes[\"t-body-page\"]}>{usersList}</tbody>\n        </table>\n      );\n      break;\n    default:\n      break;\n  }\n  return (\n    <section className={classes[\"table-section-wrapper\"]}>\n      {props.isLoading ? (\n        <Loading />\n      ) : props.errorMessage === \"\" ? (\n        <div className={classes[\"table-container\"]}>\n          {!props.isEmptyList ? (\n            listGridItem\n          ) : (\n            <div className={classes[\"empty-list\"]}>\n              <div className={classes[\"empty-list-header\"]}>\n                No Accounts retrieved\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className={classes[\"empty-list\"]}>\n          <div className={classes[\"empty-list-header-error\"]}>\n            {props.errorMessage}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default UsersList;\n"]},"metadata":{},"sourceType":"module"}