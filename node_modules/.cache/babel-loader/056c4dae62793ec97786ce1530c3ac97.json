{"ast":null,"code":"var _jsxFileName = \"/Users/kevinogidigbo/searchgit/src/components/ResultTable/UsersList.tsx\";\n// components\nimport UsersListItem from \"./UsersListItem\";\nimport UsersGridItem from \"./UsersGridItem\";\nimport Loading from \"../common/Loading/Loading\"; // types\n\n// css import\nimport classes from \"./ResultTable.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = props => {\n  let usersList;\n  let listGridItem; // render usersList based on view preference prop ( list or grid )\n\n  switch (props.viewPreference) {\n    case \"grid\":\n      usersList = props.users.map(user => /*#__PURE__*/_jsxDEV(UsersGridItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this));\n      listGridItem = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"list_container\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes[\"grid-header\"],\n          children: \"Profiles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes[\"grid-body-wrapper\"],\n          children: usersList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case \"list\":\n      usersList = props.users.map(user => /*#__PURE__*/_jsxDEV(UsersListItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this));\n      listGridItem = /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes[\"list_container\"],\n        cellPadding: \"5\",\n        cellSpacing: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 1,\n              className: `${classes[\"list_header_text\"]} ${classes[\"profile\"]}`,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 1,\n              className: classes[\"list_header_text\"],\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: classes[\"t-body-page\"],\n          children: usersList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes[\"table-section-wrapper\"],\n    children: props.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : props.errorMessage === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"table-container\"],\n      children: !props.isEmptyList ? listGridItem : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"empty-list\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes[\"empty-list-header\"],\n          children: \"No Accounts retrieved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"empty-list\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"empty-list-header-error\"],\n        children: props.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/Users/kevinogidigbo/searchgit/src/components/ResultTable/UsersList.tsx"],"names":["UsersListItem","UsersGridItem","Loading","classes","UsersList","props","usersList","listGridItem","viewPreference","users","map","user","id","isLoading","errorMessage","isEmptyList"],"mappings":"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","sourcesContent":["// components\nimport UsersListItem from \"./UsersListItem\";\nimport UsersGridItem from \"./UsersGridItem\";\nimport Loading from \"../common/Loading/Loading\";\n\n// types\nimport { User } from \"../../App\";\n\n// css import\nimport classes from \"./ResultTable.module.css\";\n\ntype Props = {\n  viewPreference: string;\n  users: User[];\n  isEmptyList: boolean;\n  isLoading: boolean;\n  filterParam: string;\n  errorMessage: string;\n};\n\nconst UsersList: React.FC<Props> = (props) => {\n  let usersList;\n  let listGridItem;\n\n  // render usersList based on view preference prop ( list or grid )\n  switch (props.viewPreference) {\n    case \"grid\":\n      usersList = props.users.map((user) => (\n        <UsersGridItem key={user.id} user={user} />\n      ));\n      listGridItem = (\n        <div className={classes[\"list_container\"]}>\n          <div className={classes[\"grid-header\"]}>Profiles</div>\n          <div className={classes[\"grid-body-wrapper\"]}>{usersList}</div>\n        </div>\n      );\n      break;\n    case \"list\":\n      usersList = props.users.map((user) => (\n        <UsersListItem key={user.id} user={user} />\n      ));\n      listGridItem = (\n        <table\n          className={classes[\"list_container\"]}\n          cellPadding=\"5\"\n          cellSpacing=\"0\"\n        >\n          <thead>\n            <tr>\n              <th\n                colSpan={1}\n                className={`${classes[\"list_header_text\"]} ${classes[\"profile\"]}`}\n              >\n                Login\n              </th>\n              <th colSpan={1} className={classes[\"list_header_text\"]}>\n                Type\n              </th>\n            </tr>\n          </thead>\n          <tbody className={classes[\"t-body-page\"]}>{usersList}</tbody>\n        </table>\n      );\n      break;\n    default:\n      break;\n  }\n  return (\n    <section className={classes[\"table-section-wrapper\"]}>\n      {props.isLoading ? (\n        <Loading />\n      ) : props.errorMessage === \"\" ? (\n        <div className={classes[\"table-container\"]}>\n          {!props.isEmptyList ? (\n            listGridItem\n          ) : (\n            <div className={classes[\"empty-list\"]}>\n              <div className={classes[\"empty-list-header\"]}>\n                No Accounts retrieved\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className={classes[\"empty-list\"]}>\n          <div className={classes[\"empty-list-header-error\"]}>\n            {props.errorMessage}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default UsersList;\n"]},"metadata":{},"sourceType":"module"}